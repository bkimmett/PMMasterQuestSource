%% Bonus enemies

@ $Fuzzy
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         4`b 

@ $Script_TakeTurn_8021FF30
  [934]  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000003 00000020 )
  
% =================
% DELETING CLUBBA
% =================

#delete $Clubba
#delete $SpriteTable_8021EC14 
#delete $Script_Init_8021EC60
#delete $Script_Idle_8021ECAC
#delete $StatusTable_8021EB68 
#delete $Script_HandleEvent_8021ECBC
#delete $Script_TakeTurn_8021F1CC
%#delete $DefenseTable_8021F720
%#delete $StatusTable_8021F72C

% ============
% CLUBBA DEAD
% ============

@ $Pokey
% stats
[MaxHP]         6`b 

% weak to fire
@ $DefenseTable_80222E60
.Element:Normal 00000000
.Element:Fire   FFFFFFFE
.Element:End

%increased damage
@ $Script_TakeTurn_80224BF8
  [90C]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020300 00000003 00000020 )
  
@ $Script_80226170
  [6D8]  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 00000003 00000020 )

% ====================================================
% BigLanternGhost
% ====================================================

@ $BigLanternGhost
% stats
[Index]        B1b 
[Level]        42`b 
[MaxHP]        50`b
[PowerBounce]  3`b 

@ $StatusTable_80218DC8
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      20`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      20`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   20`
.Status:Shrink      0`
.Status:Stop       20`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

% increase damage to player, add shock proc
@ $Script_8021A3E4
[518]	Call     DamageTarget 	( FFFFFF81 *Var[E] 20000000 0000FFFF 80010264 00000005 00000020 )

% moar damage
@  $Script_80219C00
[53C]	Call     DamageTarget 	( FFFFFF81 *Var[0] 00000000 00000000 00000000 00000008 00000020 )

@ $Script_8021B0F8
  SetConst  *Var[0]  00000001 
  SetConst  *Var[1]  006D0007 
    ExecWait DoReturnHome 
    Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
    Call     GetActorHP  	( .Actor:Self *Var[0] )
  		If  *Var[0]  <  0000001F
			If *Var[8] == 00000000
				Set *Var[8] 00000001
				ExecWait $Script_8021A3E4
			Else
				Set *Var[8] 00000000
			EndIf
		EndIf	
    Return
    End

% ====================================================
% HammerBros
% ====================================================	

@ $HammerBros
[MaxHP]	15`b
[Item]         30`b 
[AirLift]      0`b
[Hurricane]    0`b

@ $DefenseTable_80221028
.Element:Normal 00000001
.Element:End

@ $StatusTable_80218DC8
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      40`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      55`
.Status:Fear    0`
.Status:Static      0`
.Status:Paralyze   70`
.Status:Shrink     20`
.Status:Stop       70`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -2`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

@ $Script_802218B4 %Main attack
[6D8]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 800804332 0000000C 00000020 ) %may god have mercy if you picked this

@ $Script_80222570 %Multi-attack
[698]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000010 )
[6D8]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000040 )
[718]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080264 00000005 00000040 )
[770]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000040 )
[7B0]  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080464 00000007 00000020 ) %25 damage if you dont block, no def badges. however with def+, damage dodgex2,
																									 % and d-up/p-down on a 5x block with water block, it does 1. sooooooooo...
%=====================================================
%Koopatrol

@ $Koopatrol
% stats
[Level]        25`b
[MaxHP]         15`b 
[Item]         30`b 
[AirLift]      0`b
[Hurricane]    0`b

%@ $Koopatrol_12
% stats
%[Index]        4Cb 
%[Level]        25`b 
%[MaxHP]        15`b
%[Item]         30`b
%[AirLift]      25`b 

@ $StatusTable_80228254
.Status:Normal      0`
.Status:Default    0`
.Status:Sleep      55`
.Status:Poison     10`
.Status:Frozen      0`
.Status:Dizzy      15`
.Status:Fear    0`
.Status:Static     10`
.Status:Paralyze   25`
.Status:Shrink     33`
.Status:Stop       50`
.Status:DefaultTurnMod   0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      -2`
.Status:FearTurnMod   0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   -2`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End 

@ $Script_80229E34
     0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If       *Var[0] ==  .Phase:FirstStrike
   5C:     Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:     Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   94:     If       *Var[0] ==  00000001 
   A4:        Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:        Sub      *Var[0] 00000001 
   CC:        If       *Var[0]  >  00000000 
   DC:           Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:           Call     8026EE88 ( FFFFFF81 00000001 00000000 00000002 )
  110:           Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:           Wait     0000000F 
  134:           Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:           Call     8026EF4C ( FFFFFF81 00000001 00000000 )
  164:        Else
  16C:           Call     8026EE88 ( FFFFFF81 00000001 00000000 00000002 )
  188:           Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:           Wait     0000000A 
  1AC:           Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:           Call     8026EF4C ( FFFFFF81 00000001 00000000 )
  1DC:           Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1F8:           Call     PlaySoundAtActor 	( .Actor:Self 000003E2 )
  20C:           Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  224:           Set      *Var[0] 00000000 
  234:           Call     8026C4AC ( FFFFFF81 00000000 0000000C 00000000 )
  250:           Thread
  258:              Loop     00000005 
  264:                 Add      *Var[0] 0000000F 
  274:                 Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:                 Wait     00000001 
  29C:              EndLoop
  2A4:           EndThread
  2AC:           Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:           Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:           Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  2F8:           Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:           Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:           Call     8026C4AC ( FFFFFF81 00000000 00000000 00000000 )
  348:           Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:           Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  380:           Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  398:           Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  3E0:           Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:           Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:           Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  434:           Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  44C:        EndIf
  /%
  454:        Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:        Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:        Return
  %/
  484:     EndIf
  48C:     Call     UseCamPreset 	( 0000003F )
  49C:     Call     CamTargetActor ( .Actor:Self )
  4AC:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  4C4:     Wait     0000000A 
  4D0:     Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  4E8:     Wait     0000000A 
  4F4:     Thread
  4FC:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:        Add      *Var[1] 00000004 
  528:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:        Wait     00000003 
  578:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:        Wait     00000002 
  5C8:        Call     PlayEffect  	( 0000001D 00000001 *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:     EndThread
  614:     Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  628:     Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  640:     Wait     0000000A 
  64C:     Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  680:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  69C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  6C0:  Switch   *Var[0] 
  6CC:     CaseOR   ==  00000006 
  6D8:     CaseOR   ==  00000005 
  6E4:        Set      *Var[A] *Var[0] 
  6F4:        Call     SetGoalToTarget 	( .Actor:Self )
  704:        Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  720:        Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) % was 16.0
  734:        Call     RunToGoal    	( .Actor:Self 00000000 .False )
  74C:        Call     GetBattlePhase ( *Var[0] )
  75C:        If       *Var[0] ==  .Phase:FirstStrike
  76C:           Call     UseCamPreset 	( 00000005 )
  77C:           Call     SetCamZoom  	( 0000012C )
  78C:           Call     SetCamOffsetZ 	( 00000014 )
  79C:           Call     MoveCamOver 	( 0000000A )
  7AC:           Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7C4:        EndIf
  7CC:        If       *Var[A] ==  00000005 
  7DC:           Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  800:        EndIf
  808:        Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  820:        Wait     00000008 
  82C:        Call     8026F6EC ( FFFFFF81 )
  83C:        Call     SetActorAngle 	( .Actor:Self 000000B4 )
  850:        Wait     00000004 
  85C:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  874:        Wait     00000001 
  880:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  898:        Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B4:        Add      *Var[1] 00000014 
  8C4:        Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:        Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  8F4:        Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  914:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  92C:        Wait     00000006 
  938:        Sub      *Var[1] 00000014 
  948:        Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  964:        Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  984:        Call     UseCamPreset 	( 00000002 )
  994:        Call     8027D7F0 ( )
  9A0:        Call     SetActorAngle 	( .Actor:Self 000000B4 )
  9B4:        Call     8026EE88 ( FFFFFF81 00000001 00000000 00000002 )
  9D0:        Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  9E8:        Call     SetGoalToHome 	( .Actor:Self )
  9F8:        Call     SetActorSpeed 	( .Actor:Self *Fixed[11.0] ) % was 8.0
  A0C:        Call     RunToGoal    	( .Actor:Self 00000000 .False )
  A24:        Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  A3C:        Call     8026EF4C ( FFFFFF81 00000001 00000000 )
  A54:        Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A6C:        Call     SetActorAngle 	( .Actor:Self 00000000 )
  A80:        Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:        Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:        Return
  AB0:     EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call     SetGoalToTarget 	( .Actor:Self )
  AD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[22.0] ) % was 16.0
  AE4:  Call     RunToGoal    	( .Actor:Self 00000000 .False )
  AFC:  Call     8026F6EC ( FFFFFF81 )
  B0C:  Wait     00000002 
  B18:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 80010164 00000009 00000020 )
  B40:  Switch   *Var[0] 
  B4C:     CaseOR   ==  00000000 
  B58:     CaseOR   ==  00000002 
  B64:        Call     UseCamPreset 	( 00000002 )
  B74:        Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B90:        Add      *Var[0] 00000028 
  BA0:        Set      *Var[1] 00000000 
  BB0:        Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  BC4:        Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE0:        Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C00:        Add      *Var[0] 0000001E 
  C10:        Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C2C:        Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C4C:        Add      *Var[0] 00000014 
  C5C:        Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:        Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C98:        Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  CB0:        Wait     00000008 
  CBC:        Call     8027D7F0 ( )
  CC8:        SetConst *Var[0] 00000001 
  CD8:        SetConst *Var[1] 00590004 
  CE8:        ExecWait 8029BEB8 
  CF4:        Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  D0C:     EndCaseGroup
  D14:  EndSwitch
  D1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D44:  Return
  D4C:  End
  
@ $Script_8022AB88
[660]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] ) 
[748]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] )
[918]	Call	SetActorSpeed	( .Actor:Self *Fixed[22.0] )
[950]  Call     DamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 00000019 00000020 )
  
@ $DefenseTable_80228220
.Element:Normal 00000005
.Element:Fire   00000003
.Element:End

@ $DefenseTable_80228234
.Element:Normal 00000002
.Element:Fire   00000003
.Element:End

@ $DefenseTable_80228240
.Element:Normal 00000005
.Element:Fire   00000003
.Element:End

% ====================================================
% Formation Changes
% ====================================================	

%=========================================================================
% UPDATED ANTI GUY FIGHT TO BE AS BROKEN AS POSSIBLE
% 4 NEW ANTI VARIANTS -> MALPRACTICE, COVERT, DANDY GUYS, INFERNO
%=========================================================================

#import 10_AntiGuy.bpat
#import MalpracticeGuy.bpat
#import DandyGuy.bpat
#import CovertGuy.bpat
#import InfernoGuy.bpat

@ $FormationTable
$SJIS_8022EE60 00000001 $Formation_00 $Stage_8021B4A0 00000000 
$SJIS_8022EE48 00000001 $Formation_01 $Stage_8021B62C 00000000 
$SJIS_8022EE2C 00000002 $Formation_02 $Stage_8021B62C 00000000 % unused
$SJIS_8022EE10 00000001 $Formation_03 $Stage_8021B62C 00000000 
$SJIS_8022EDF4 00000002 $Formation_04 $Stage_8021B62C 00000000 % unused
$SJIS_8022EDD8 00000004 $Formation_05 $Stage_8021B62C 00000000 
$SJIS_8022EDB8 00000005 $Formation_06 $Stage_8021B62C 00000000 % anti army
$SJIS_8022ED98 00000001 $Formation_07 $Stage_8021B62C 00000000 
$SJIS_8022ED80 00000002 $Formation_08 $Stage_8021B62C 00000000 
$SJIS_8022ED64 00000001 $Formation_09 $Stage_8021B62C 00000000 
$SJIS_8022ED58 00000001 $Formation_0A $Stage_8021B398 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

@ $Formation_03
$10_AntiGuy 00000001 0000000A 00000000 00000000 00000000 00000000 

@ $Formation_07
$HammerBros	00000001 0000000A 00000000 00000000 00000000 00000000 
 
@ $Formation_08
$Pokey 00000001 0000000A 00000000 00000001 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000001 00000000 00000000 

@ $Formation_09
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 

@ $Formation_06
$10_AntiGuy		00000000 0000000A 00000000 00000000 00000000 00000000 %I updated this formation
$CovertGuy		00000001 00000009 00000000 00000000 00000000 00000000 %This is probably gonna be OP
$InfernoGuy     00000002 00000008 00000000 00000000 00000000 00000000 %250 total HP, 5 enemies to deal with
$DandyGuy		00000003 00000007 00000000 00000000 00000000 00000000 %Im sorry but also not sorry at all. RIP Mario 1985-2019
$MalpracticeGuy 00000007 00000006 00000000 00000000 00000000 00000000 %Blame Sin Biscuit if you dont like it
